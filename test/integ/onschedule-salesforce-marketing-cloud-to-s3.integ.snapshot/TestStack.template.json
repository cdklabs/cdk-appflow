{
 "Resources": {
  "TestConnectorEE9F0A13": {
   "Type": "AWS::AppFlow::ConnectorProfile",
   "Properties": {
    "ConnectionMode": "Public",
    "ConnectorLabel": "SalesforceMarketingCloud",
    "ConnectorProfileConfig": {
     "ConnectorProfileCredentials": {
      "CustomConnector": {
       "AuthenticationType": "OAUTH2",
       "Oauth2": {
        "ClientId": {
         "Fn::Join": [
          "",
          [
           "{{resolve:secretsmanager:arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":secretsmanager:eu-west-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":secret:sfmc/secret:SecretString:clientId::}}"
          ]
         ]
        },
        "ClientSecret": {
         "Fn::Join": [
          "",
          [
           "{{resolve:secretsmanager:arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":secretsmanager:eu-west-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":secret:sfmc/secret:SecretString:clientSecret::}}"
          ]
         ]
        }
       }
      }
     },
     "ConnectorProfileProperties": {
      "CustomConnector": {
       "OAuth2Properties": {
        "OAuth2GrantType": "CLIENT_CREDENTIALS",
        "TokenUrl": {
         "Fn::Join": [
          "",
          [
           "{{resolve:secretsmanager:arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":secretsmanager:eu-west-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":secret:sfmc/secret:SecretString:tokenUrl::}}"
          ]
         ]
        }
       },
       "ProfileProperties": {
        "instanceUrl": {
         "Fn::Join": [
          "",
          [
           "{{resolve:secretsmanager:arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":secretsmanager:eu-west-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":secret:sfmc/secret:SecretString:instanceUrl::}}"
          ]
         ]
        }
       }
      }
     }
    },
    "ConnectorProfileName": "TestConnector",
    "ConnectorType": "CustomConnector"
   }
  },
  "TestBucket560B80BC": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "TestBucketPolicyBA12ED38": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "TestBucket560B80BC"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "TestBucket560B80BC",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TestBucket560B80BC",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:PutObject",
        "s3:AbortMultipartUpload",
        "s3:ListMultipartUploadParts",
        "s3:ListBucketMultipartUploads",
        "s3:GetBucketAcl",
        "s3:PutObjectAcl"
       ],
       "Condition": {
        "StringEquals": {
         "aws:SourceAccount": {
          "Ref": "AWS::AccountId"
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "appflow.amazonaws.com"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "TestBucket560B80BC",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TestBucket560B80BC",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "TestBucketAutoDeleteObjectsCustomResource8FEAABD5": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "TestBucket560B80BC"
    }
   },
   "DependsOn": [
    "TestBucketPolicyBA12ED38"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-2"
     },
     "S3Key": "b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "TestBucket560B80BC"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ]
  },
  "OnScheduleFlow9A474F3B": {
   "Type": "AWS::AppFlow::Flow",
   "Properties": {
    "DestinationFlowConfigList": [
     {
      "ConnectorType": "S3",
      "DestinationConnectorProperties": {
       "S3": {
        "BucketName": {
         "Ref": "TestBucket560B80BC"
        }
       }
      }
     }
    ],
    "FlowName": "OnScheduleFlow",
    "SourceFlowConfig": {
     "ApiVersion": "v1",
     "ConnectorProfileName": "TestConnector",
     "ConnectorType": "CustomConnector",
     "SourceConnectorProperties": {
      "CustomConnector": {
       "EntityName": "Email"
      }
     }
    },
    "Tasks": [
     {
      "ConnectorOperator": {
       "CustomConnector": "PROJECTION"
      },
      "SourceFields": [
       "Name"
      ],
      "TaskType": "Filter"
     },
     {
      "ConnectorOperator": {
       "CustomConnector": "NO_OP"
      },
      "DestinationField": "Name",
      "SourceFields": [
       "Name"
      ],
      "TaskProperties": [
       {
        "Key": "SOURCE_DATA_TYPE",
        "Value": "String"
       },
       {
        "Key": "DESTINATION_DATA_TYPE",
        "Value": "string"
       }
      ],
      "TaskType": "Map"
     },
     {
      "ConnectorOperator": {
       "CustomConnector": "MASK_ALL"
      },
      "SourceFields": [
       "Name"
      ],
      "TaskProperties": [
       {
        "Key": "MASK_LENGTH",
        "Value": "5"
       },
       {
        "Key": "MASK_VALUE",
        "Value": "*"
       }
      ],
      "TaskType": "Mask"
     },
     {
      "ConnectorOperator": {
       "CustomConnector": "VALIDATE_NON_NULL"
      },
      "SourceFields": [
       "Name"
      ],
      "TaskProperties": [
       {
        "Key": "VALIDATION_ACTION",
        "Value": "DropRecord"
       }
      ],
      "TaskType": "Validate"
     }
    ],
    "TriggerConfig": {
     "TriggerProperties": {
      "DataPullMode": "Incremental",
      "ScheduleExpression": {
       "Fn::GetAtt": [
        "OnScheduleFlowUpdater39178314",
        "Schedule"
       ]
      },
      "ScheduleStartTime": {
       "Fn::GetAtt": [
        "OnScheduleFlowUpdater39178314",
        "StartTime"
       ]
      }
     },
     "TriggerType": "Scheduled"
    }
   },
   "DependsOn": [
    "OnScheduleFlowUpdater39178314",
    "TestBucketAutoDeleteObjectsCustomResource8FEAABD5",
    "TestBucketPolicyBA12ED38",
    "TestBucket560B80BC",
    "TestConnectorEE9F0A13"
   ]
  },
  "OnScheduleFlowOnRunStarted5B6B0F14": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "source": [
      "aws.appflow"
     ],
     "resources": [
      {
       "Fn::GetAtt": [
        "OnScheduleFlow9A474F3B",
        "FlowArn"
       ]
      }
     ],
     "detail-type": [
      "AppFlow Start Flow Run Report"
     ]
    },
    "State": "ENABLED"
   },
   "DependsOn": [
    "OnScheduleFlowUpdater39178314",
    "TestBucketAutoDeleteObjectsCustomResource8FEAABD5",
    "TestBucketPolicyBA12ED38",
    "TestBucket560B80BC",
    "TestConnectorEE9F0A13"
   ]
  },
  "OnScheduleFlowUpdater39178314": {
   "Type": "Custom::FlowTimeUpdater",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "comamazonawscdkcustomresourcesflowtimeproviderframeworkonEvent01F8E5FF",
      "Arn"
     ]
    },
    "Schedule": "cron(1 1 * * ? *)",
    "StartTime": "2024-01-01T00:00:00.000Z"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "comamazonawscdkcustomresourcesflowtimeproviderflowtimeoneventServiceRole00475FEE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "comamazonawscdkcustomresourcesflowtimeproviderflowtimeoneventED9FCF4A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-2"
     },
     "S3Key": "bda456ca3af7776e8e5ce88f2bbd621cc239ae9a3ce52dce5e34d1770b7380d2.zip"
    },
    "Description": "src/core/flows/flow-time-updater/flow-time-updater.lambda.ts",
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "comamazonawscdkcustomresourcesflowtimeproviderflowtimeoneventServiceRole00475FEE",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "comamazonawscdkcustomresourcesflowtimeproviderflowtimeoneventServiceRole00475FEE"
   ]
  },
  "comamazonawscdkcustomresourcesflowtimeproviderframeworkonEventServiceRole2DC53640": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "comamazonawscdkcustomresourcesflowtimeproviderframeworkonEventServiceRoleDefaultPolicyDE524CE6": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "comamazonawscdkcustomresourcesflowtimeproviderflowtimeoneventED9FCF4A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "comamazonawscdkcustomresourcesflowtimeproviderflowtimeoneventED9FCF4A",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "comamazonawscdkcustomresourcesflowtimeproviderframeworkonEventServiceRoleDefaultPolicyDE524CE6",
    "Roles": [
     {
      "Ref": "comamazonawscdkcustomresourcesflowtimeproviderframeworkonEventServiceRole2DC53640"
     }
    ]
   }
  },
  "comamazonawscdkcustomresourcesflowtimeproviderframeworkonEvent01F8E5FF": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-eu-west-2"
     },
     "S3Key": "7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip"
    },
    "Description": "AWS CDK resource provider framework - onEvent (TestStack/com.amazonaws.cdk.custom-resources.flow-time-provider/flow-time-provider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "comamazonawscdkcustomresourcesflowtimeproviderflowtimeoneventED9FCF4A",
        "Arn"
       ]
      }
     }
    },
    "Handler": "framework.onEvent",
    "Role": {
     "Fn::GetAtt": [
      "comamazonawscdkcustomresourcesflowtimeproviderframeworkonEventServiceRole2DC53640",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 900
   },
   "DependsOn": [
    "comamazonawscdkcustomresourcesflowtimeproviderframeworkonEventServiceRoleDefaultPolicyDE524CE6",
    "comamazonawscdkcustomresourcesflowtimeproviderframeworkonEventServiceRole2DC53640"
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}